buildscript {

  ext {
    springBootVersion = '2.2.10.RELEASE'
    springWeb = '5.2.9.RELEASE'
    springCloud = '2.2.5.RELEASE'
    jacocoVersion = '0.8.4'
    jfrogUser = System.getenv('JFROG_USER')
    jfrogPassword = System.getenv('JFROG_PASSWORD')
    jfrogContextUrl = System.getenv('JFROG_CONTEXT_URL')
  }

  repositories {
    mavenLocal()
    mavenCentral()
    maven {
      url "https://plugins.gradle.org/m2/"
    }
    maven {
      url "https://piso19.jfrog.io/piso19/libs-release"
      credentials {
        username = "$jfrogUser"
        password = "$jfrogPassword"
      }
    }
    maven {
      url "https://piso19.jfrog.io/piso19/libs-snapshot"
      credentials {
        username = "$jfrogUser"
        password = "$jfrogPassword"
      }
    }
  }

  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    classpath 'net.researchgate:gradle-release:2.6.0'
    classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.7.1"
    classpath "org.jfrog.buildinfo:build-info-extractor-gradle:latest.release"
    classpath 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.4.6'

  }

}

apply plugin: "org.sonarqube"
apply from: "$rootDir/gradle/all.gradle"
apply from: "$rootDir/gradle/release.gradle"

release {
  tagTemplate = '$name-$version'
  failOnCommitNeeded = false
  failOnPublishNeeded = true
  failOnSnapshotDependencies = false
  failOnUnversionedFiles = true
  failOnUpdateNeeded = true
  revertOnFail = true
  preCommitText = '[ci skip] [CircleCI] '
  preTagCommitMessage = 'release '
  tagCommitMessage = 'release '
  newVersionCommitMessage = 'release '
  buildTasks = ['build', 'releaseBuild', 'publishCurrent']

}

task releaseBuild {
  dependsOn(
          'otp-business-capability-starter:build',
          'otp-business-capability-sdk:build',
          'otp-business-capability-services:build'
  )
}

task publishCurrent {
  dependsOn('artifactoryPublish')
}

task jacocoRootReport(type: org.gradle.testing.jacoco.tasks.JacocoReport) {
  dependsOn = subprojects.test
  additionalSourceDirs = files(subprojects.sourceSets.main.allSource.srcDirs)
  sourceDirectories = files(subprojects.sourceSets.main.allSource.srcDirs)
  classDirectories = files(subprojects.sourceSets.main.output)
  executionData = files(subprojects.jacocoTestReport.executionData)
  reports {
    html.enabled = true
    xml.enabled = true
    csv.enabled = false
  }
  onlyIf = {
    true
  }
  doFirst {
    executionData = files(executionData.findAll {
      it.exists()
    })
  }
  afterEvaluate {
    classDirectories.setFrom(files(classDirectories.files.collect {
      fileTree(dir: it, exclude: '**/newrelic/**')
    }))
  }
}

def allTestCoverageFile = "${rootProject.buildDir}/reports/jacoco/jacocoRootReport/jacocoRootReport.xml"

subprojects {
  apply plugin: 'java'

  sourceCompatibility = 1.8
  targetCompatibility = 1.8

  repositories {
    mavenLocal()
    mavenCentral()
    maven {
      url "https://plugins.gradle.org/m2/"
    }
    maven {
      url "https://piso19.jfrog.io/piso19/libs-release"
      credentials {
        username = "$jfrogUser"
        password = "$jfrogPassword"
      }
    }
    maven {
      url "https://piso19.jfrog.io/piso19/libs-snapshot"
      credentials {
        username = "$jfrogUser"
        password = "$jfrogPassword"
      }
    }
  }


  dependencies {

    implementation "org.springframework.boot:spring-boot-starter-actuator:$springBootVersion"
    implementation "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
    implementation "org.springframework.boot:spring-boot-starter-data-redis:$springBootVersion"

    implementation 'com.fasterxml.uuid:java-uuid-generator:3.1.5'

    implementation 'javax.mail:javax.mail-api:1.6.1'
    implementation 'com.sun.mail:javax.mail:1.6.0'
    implementation 'org.owasp.encoder:encoder:1.2.2'

    compile group: 'com.lulobank', name: 'lulobank-core', version: '1.0.23'

    testImplementation "org.jacoco:org.jacoco.core:$jacocoVersion"
    testImplementation "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
    testImplementation "com.github.tomakehurst:wiremock-jre8:2.24.1"
    implementation "org.yaml:snakeyaml:1.27"
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.11.3'
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'
    implementation 'com.lulobank:logger-api:0.0.7'
  }

  sonarqube {
    properties {
      property 'sonar.exclusions',
              "**/com/lulobank/otp/services/outbounadadapters/**, " +
              "**/com/lulobank/otp/starter/config/**, " +
              "**/com/lulobank/otp/starter/env/**, " +
              "**/com/lulobank/otp/starter/adapters/out/pushnotifications/dto/**, " +
              "**/com/lulobank/otp/starter/v3/adapters/config/**, " +
              "**/com/lulobank/otp/starter/v3/adapters/out/clients/config/**, " +
              "**/com/lulobank/otp/starter/v3/adapters/out/clients/config/**, " +
              "**/com/lulobank/otp/starter/adapters/out/pushnotifications/PushNotificationsServiceConfig.java, " +
              "**/com/lulobank/otp/services/features/notification/model/**, " +
              "**/com/lulobank/otp/services/v3/util/**, " +
              "**/com/lulobank/otp/services/utils/**, " +
              "**/com/lulobank/otp/services/exceptions/**, " +
              "**/com/lulobank/otp/services/events/**, " +
              "**/com/lulobank/otp/services/features/zendesk/model/** ";
      property "sonar.coverage.jacoco.xmlReportPaths", allTestCoverageFile
    }
  }
}
project.tasks["sonarqube"].dependsOn "jacocoRootReport"
